# the UserData property of the EC2Instance resource contains a script that updates the /etc/ecs/ecs.config file with the value of the ClusterName parameter. 
#The Fn::Base64 and !Sub functions are used to encode the script and substitute the value of the ClusterName parameter into the script. 
# When the EC2 instance is launched, this script will be executed, and the /etc/ecs/ecs.config file will be updated with the correct cluster name

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      # ...
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config
          # ...
Parameters:
  ClusterName:
    Type: String
    Description: The name of the ECS cluster to register the container instance with.

# ...


AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template to create an Amazon ECS cluster and an Auto Scaling group of EC2 instances registered with the specified cluster.'

Parameters:
  ClusterName:
    Type: String
    Description: 'The name of the Amazon ECS cluster to create.'

Resources:
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: !Ref ClusterName

  LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0c94855ba95c71c99 # Amazon Linux 2 LTS AMI
      InstanceType: t2.micro
      IamInstanceProfile: !Ref ECSInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}

  ECSAutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier:
        - subnet-0123456789abcdef0 # Replace with your VPC subnet ID
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 1
      MaxSize: 5
      DesiredCapacity: 2
    CreationPolicy:
        ResourceSignal:
          Timeout: PT5M

  ECSInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  ECSInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref ECSInstanceRole

Outputs:
  ClusterName:
    Description: 'The name of the Amazon ECS cluster.'
    Value: !Ref ECSCluster
